(lambda (map (lambda (#(lambda (gt? $0 0)) (mod (+ 1 $0) (- 1 #(+ 1 (+ 1 1)))))) $0))
(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? 1 (mod $0 (- 1 #(+ 1 (+ 1 1))))))))
(lambda (is-prime (+ (mod (- #(+ 1 (+ 1 1)) (car $0)) #(+ 1 (+ 1 1))) (* #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1))))))
(lambda (is-prime (- (* #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1))) (mod (- (car $0) #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1))))))
(lambda (eq? 1 (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (- $0 (mod (- $0 $1) $0)))))))
(lambda (is-prime (+ (mod (- (car $0) #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1))) (* #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1))))))
(lambda (is-prime (mod (- (fold $0 1 (lambda (lambda $1))) #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1)))))
(lambda (gt? (fold $0 1 (lambda (lambda (- $0 (mod $1 (- $0 #(+ 1 (+ 1 1)))))))) 0))
(lambda (is-prime (- (length $0) (mod (- (fold $0 1 (lambda (lambda (- 1 $1)))) #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1))))))
(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? 1 (mod $0 (- 1 #(+ 1 (+ 1 1))))))))